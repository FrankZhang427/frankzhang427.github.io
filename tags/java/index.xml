<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java on Frank Zhang</title>
    <link>https://frankzhang427.github.io/tags/java/</link>
    <description>Recent content in java on Frank Zhang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://frankzhang427.github.io/tags/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Improving SIMBICON for Biped Animation</title>
      <link>https://frankzhang427.github.io/project/improved_simbicon/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://frankzhang427.github.io/project/improved_simbicon/</guid>
      <description>Abstract Biped balance control strategy is difficult to design as biped locomotion suffers from high-dimensional action spaces, underactuated dynamics, and unstable joint controls. We propose a generalized balance control strategy that can synthesize robust biped walking locomotion. The generalization consists of two parts, a coordinated joint control and generalized ground height feedback. We also conduct principle component analysis on generated locomotion to further improve the state used in finite state machine.</description>
    </item>
    
    <item>
      <title>Robust Cloth Simulation with Constraints and Collision Detection</title>
      <link>https://frankzhang427.github.io/project/robust_cloth/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://frankzhang427.github.io/project/robust_cloth/</guid>
      <description>Abstract The goal of this project is to extend the idea of particle-spring system, constraints and collision detection into 3D by implementing a cloth simulator in 3D. The first step is to extend the existed functionalities from previous 2D version into 3D. The position and velocity of each particle at each time step are updated by Backward Euler integrator. Using an explicit integrator generally produces an unstable simulation for large time steps.</description>
    </item>
    
    <item>
      <title>Distributed Travel Reservation System</title>
      <link>https://frankzhang427.github.io/project/distributed/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://frankzhang427.github.io/project/distributed/</guid>
      <description>Abstract The goal of this project is to design and develop a component-based distributed travel reservation system. The concepts of distribution, coordination, scalability, and fault-tolerance are implemented in the system. This project focuses on backend design of the system, with minimal frontend interactive interface.
System Design The system architecture is RMI-based with middleware server that supports multiple clients and multiple resource managers. The key components of middleware is the middleware process, a centralized lock manager, and a transaction manager.</description>
    </item>
    
    <item>
      <title>Particle Spring System in 2D</title>
      <link>https://frankzhang427.github.io/project/particle_spring_2d/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://frankzhang427.github.io/project/particle_spring_2d/</guid>
      <description>Abstract The goal of this project is to implement the idea of particle-spring system in 2D. The position and velocity of each particle at each time step are updated by symplectic Euler integrator. Collision detection and impulse response are also implemented. Several test cases are given in the application. An amusing pinball-puzzle is created based on this system.
Pinball-Puzzle A pinball-puzzle is simulated in real time. Here is a sample puzzle.</description>
    </item>
    
    <item>
      <title>Simulate Link State Routing Protocol</title>
      <link>https://frankzhang427.github.io/project/simulatelsrp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://frankzhang427.github.io/project/simulatelsrp/</guid>
      <description>Abstract The goal of this project is to develop a pure user-space program which simulates the major functionalities of a routing device running a simplified Link State Routing protocol. To simulate the real-world network environment, you have to start multiple instances of the program, each of which connecting with (some of) others via socket. Each program instance represents a router or host in the simulated network space. Correspondingly, the links connecting the routers/hosts and the IP addresses identifying the routers/hosts are simulate by the in-memory data structures.</description>
    </item>
    
  </channel>
</rss>